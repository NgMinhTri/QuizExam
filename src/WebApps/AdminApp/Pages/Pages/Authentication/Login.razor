@page "/"
@page "/pages/authentication/login"
@inject NavigationManager NavigationManager;
@inject IAuthService AuthService;
@layout LoginLayout



<EditForm Model="@model" OnValidSubmit="HandleLogin">
 <MudText Typo="Typo.h4" GutterBottom="true">Sign In</MudText>

 <MudText>Don't have an account? <MudLink Href="/pages/authentication/register">Sign Up</MudLink></MudText>
  @if (!string.IsNullOrEmpty(errorMsg))
    {
        <MudText Color="@Color.Error">@errorMsg</MudText>
    }

 <MudTextField T="string" @bind-Value="@model.UserName" Label="UserName" Variant="Variant.Outlined" Class="my-6"></MudTextField>

 <MudTextField @bind-Value="@model.Password" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />

 <div Class="d-flex justify-space-between align-center">
    <MudCheckBox T="bool" Label="Remember me?" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
    <MudLink Href="/pages/authentication/forgot-password">Forgot pwd?</MudLink>
 </div>

 <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleLogin" Size="Size.Large" FullWidth="true">Sign In</MudButton>
</EditForm>

@code {
    string Password { get; set; } = "BMWvBPJXZu";

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    LoginRequest model = new LoginRequest();
    string errorMsg = string.Empty;
    
    //Hàm xử lý Login
    async Task HandleLogin()
    {
        var result = await AuthService.Login(model);
        if (result.IsError == false)
        {
            NavigationManager.NavigateTo("/personal/dashboard");
        }
        else
        {
            errorMsg = "Incorrect username or password";
        }
    }
    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}
